{"ast":null,"code":"import _classCallCheck from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n/** @ignore */\nexport var GetBuilderCtor = /*#__PURE__*/function (_Visitor) {\n  _inherits(GetBuilderCtor, _Visitor);\n  var _super = _createSuper(GetBuilderCtor);\n  function GetBuilderCtor() {\n    _classCallCheck(this, GetBuilderCtor);\n    return _super.apply(this, arguments);\n  }\n  _createClass(GetBuilderCtor, [{\n    key: \"visitNull\",\n    value: function visitNull() {\n      return NullBuilder;\n    }\n  }, {\n    key: \"visitBool\",\n    value: function visitBool() {\n      return BoolBuilder;\n    }\n  }, {\n    key: \"visitInt\",\n    value: function visitInt() {\n      return IntBuilder;\n    }\n  }, {\n    key: \"visitInt8\",\n    value: function visitInt8() {\n      return Int8Builder;\n    }\n  }, {\n    key: \"visitInt16\",\n    value: function visitInt16() {\n      return Int16Builder;\n    }\n  }, {\n    key: \"visitInt32\",\n    value: function visitInt32() {\n      return Int32Builder;\n    }\n  }, {\n    key: \"visitInt64\",\n    value: function visitInt64() {\n      return Int64Builder;\n    }\n  }, {\n    key: \"visitUint8\",\n    value: function visitUint8() {\n      return Uint8Builder;\n    }\n  }, {\n    key: \"visitUint16\",\n    value: function visitUint16() {\n      return Uint16Builder;\n    }\n  }, {\n    key: \"visitUint32\",\n    value: function visitUint32() {\n      return Uint32Builder;\n    }\n  }, {\n    key: \"visitUint64\",\n    value: function visitUint64() {\n      return Uint64Builder;\n    }\n  }, {\n    key: \"visitFloat\",\n    value: function visitFloat() {\n      return FloatBuilder;\n    }\n  }, {\n    key: \"visitFloat16\",\n    value: function visitFloat16() {\n      return Float16Builder;\n    }\n  }, {\n    key: \"visitFloat32\",\n    value: function visitFloat32() {\n      return Float32Builder;\n    }\n  }, {\n    key: \"visitFloat64\",\n    value: function visitFloat64() {\n      return Float64Builder;\n    }\n  }, {\n    key: \"visitUtf8\",\n    value: function visitUtf8() {\n      return Utf8Builder;\n    }\n  }, {\n    key: \"visitBinary\",\n    value: function visitBinary() {\n      return BinaryBuilder;\n    }\n  }, {\n    key: \"visitFixedSizeBinary\",\n    value: function visitFixedSizeBinary() {\n      return FixedSizeBinaryBuilder;\n    }\n  }, {\n    key: \"visitDate\",\n    value: function visitDate() {\n      return DateBuilder;\n    }\n  }, {\n    key: \"visitDateDay\",\n    value: function visitDateDay() {\n      return DateDayBuilder;\n    }\n  }, {\n    key: \"visitDateMillisecond\",\n    value: function visitDateMillisecond() {\n      return DateMillisecondBuilder;\n    }\n  }, {\n    key: \"visitTimestamp\",\n    value: function visitTimestamp() {\n      return TimestampBuilder;\n    }\n  }, {\n    key: \"visitTimestampSecond\",\n    value: function visitTimestampSecond() {\n      return TimestampSecondBuilder;\n    }\n  }, {\n    key: \"visitTimestampMillisecond\",\n    value: function visitTimestampMillisecond() {\n      return TimestampMillisecondBuilder;\n    }\n  }, {\n    key: \"visitTimestampMicrosecond\",\n    value: function visitTimestampMicrosecond() {\n      return TimestampMicrosecondBuilder;\n    }\n  }, {\n    key: \"visitTimestampNanosecond\",\n    value: function visitTimestampNanosecond() {\n      return TimestampNanosecondBuilder;\n    }\n  }, {\n    key: \"visitTime\",\n    value: function visitTime() {\n      return TimeBuilder;\n    }\n  }, {\n    key: \"visitTimeSecond\",\n    value: function visitTimeSecond() {\n      return TimeSecondBuilder;\n    }\n  }, {\n    key: \"visitTimeMillisecond\",\n    value: function visitTimeMillisecond() {\n      return TimeMillisecondBuilder;\n    }\n  }, {\n    key: \"visitTimeMicrosecond\",\n    value: function visitTimeMicrosecond() {\n      return TimeMicrosecondBuilder;\n    }\n  }, {\n    key: \"visitTimeNanosecond\",\n    value: function visitTimeNanosecond() {\n      return TimeNanosecondBuilder;\n    }\n  }, {\n    key: \"visitDecimal\",\n    value: function visitDecimal() {\n      return DecimalBuilder;\n    }\n  }, {\n    key: \"visitList\",\n    value: function visitList() {\n      return ListBuilder;\n    }\n  }, {\n    key: \"visitStruct\",\n    value: function visitStruct() {\n      return StructBuilder;\n    }\n  }, {\n    key: \"visitUnion\",\n    value: function visitUnion() {\n      return UnionBuilder;\n    }\n  }, {\n    key: \"visitDenseUnion\",\n    value: function visitDenseUnion() {\n      return DenseUnionBuilder;\n    }\n  }, {\n    key: \"visitSparseUnion\",\n    value: function visitSparseUnion() {\n      return SparseUnionBuilder;\n    }\n  }, {\n    key: \"visitDictionary\",\n    value: function visitDictionary() {\n      return DictionaryBuilder;\n    }\n  }, {\n    key: \"visitInterval\",\n    value: function visitInterval() {\n      return IntervalBuilder;\n    }\n  }, {\n    key: \"visitIntervalDayTime\",\n    value: function visitIntervalDayTime() {\n      return IntervalDayTimeBuilder;\n    }\n  }, {\n    key: \"visitIntervalYearMonth\",\n    value: function visitIntervalYearMonth() {\n      return IntervalYearMonthBuilder;\n    }\n  }, {\n    key: \"visitFixedSizeList\",\n    value: function visitFixedSizeList() {\n      return FixedSizeListBuilder;\n    }\n  }, {\n    key: \"visitMap\",\n    value: function visitMap() {\n      return MapBuilder;\n    }\n  }]);\n  return GetBuilderCtor;\n}(Visitor);\n/** @ignore */\nexport var instance = new GetBuilderCtor();","map":{"version":3,"sources":["visitor/builderctor.ts"],"names":[],"mappings":"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","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, BuilderCtor } from '../interfaces';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n\n/** @ignore */\nexport interface GetBuilderCtor extends Visitor {\n    visit<T extends Type>(type: T): BuilderCtor<T>;\n    visitMany<T extends Type>(types: T[]): BuilderCtor<T>[];\n    getVisitFn<T extends Type>(type: T): () => BuilderCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => BuilderCtor<T>;\n}\n\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n    public visitNull                 () { return NullBuilder;                 }\n    public visitBool                 () { return BoolBuilder;                 }\n    public visitInt                  () { return IntBuilder;                  }\n    public visitInt8                 () { return Int8Builder;                 }\n    public visitInt16                () { return Int16Builder;                }\n    public visitInt32                () { return Int32Builder;                }\n    public visitInt64                () { return Int64Builder;                }\n    public visitUint8                () { return Uint8Builder;                }\n    public visitUint16               () { return Uint16Builder;               }\n    public visitUint32               () { return Uint32Builder;               }\n    public visitUint64               () { return Uint64Builder;               }\n    public visitFloat                () { return FloatBuilder;                }\n    public visitFloat16              () { return Float16Builder;              }\n    public visitFloat32              () { return Float32Builder;              }\n    public visitFloat64              () { return Float64Builder;              }\n    public visitUtf8                 () { return Utf8Builder;                 }\n    public visitBinary               () { return BinaryBuilder;               }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryBuilder;      }\n    public visitDate                 () { return DateBuilder;                 }\n    public visitDateDay              () { return DateDayBuilder;              }\n    public visitDateMillisecond      () { return DateMillisecondBuilder;      }\n    public visitTimestamp            () { return TimestampBuilder;            }\n    public visitTimestampSecond      () { return TimestampSecondBuilder;      }\n    public visitTimestampMillisecond () { return TimestampMillisecondBuilder; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondBuilder; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondBuilder;  }\n    public visitTime                 () { return TimeBuilder;                 }\n    public visitTimeSecond           () { return TimeSecondBuilder;           }\n    public visitTimeMillisecond      () { return TimeMillisecondBuilder;      }\n    public visitTimeMicrosecond      () { return TimeMicrosecondBuilder;      }\n    public visitTimeNanosecond       () { return TimeNanosecondBuilder;       }\n    public visitDecimal              () { return DecimalBuilder;              }\n    public visitList                 () { return ListBuilder;                 }\n    public visitStruct               () { return StructBuilder;               }\n    public visitUnion                () { return UnionBuilder;                }\n    public visitDenseUnion           () { return DenseUnionBuilder;           }\n    public visitSparseUnion          () { return SparseUnionBuilder;          }\n    public visitDictionary           () { return DictionaryBuilder;           }\n    public visitInterval             () { return IntervalBuilder;             }\n    public visitIntervalDayTime      () { return IntervalDayTimeBuilder;      }\n    public visitIntervalYearMonth    () { return IntervalYearMonthBuilder;    }\n    public visitFixedSizeList        () { return FixedSizeListBuilder;        }\n    public visitMap                  () { return MapBuilder;                  }\n}\n\n/** @ignore */\nexport const instance = new GetBuilderCtor();\n"]},"metadata":{},"sourceType":"module"}