{"ast":null,"code":"import _defineProperty from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar _excluded = [\"readableStrategy\", \"writableStrategy\", \"queueingStrategy\"];\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Builder } from '../../builder/index';\n/** @ignore */\nexport function builderThroughDOMStream(options) {\n  return new BuilderTransform(options);\n}\n/** @ignore */\nexport var BuilderTransform = /*#__PURE__*/function () {\n  function BuilderTransform(options) {\n    var _this = this,\n      _ReadableStream,\n      _WritableStream;\n    _classCallCheck(this, BuilderTransform);\n    // Access properties by string indexers to defeat closure compiler\n    this._numChunks = 0;\n    this._finished = false;\n    this._bufferedSize = 0;\n    var readableStrategy = options['readableStrategy'],\n      writableStrategy = options['writableStrategy'],\n      _options$queueingStra = options['queueingStrategy'],\n      queueingStrategy = _options$queueingStra === void 0 ? 'count' : _options$queueingStra,\n      builderOptions = _objectWithoutProperties(options, _excluded);\n    this._controller = null;\n    this._builder = Builder.new(builderOptions);\n    this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n    var _readableStrategy = _objectSpread({}, readableStrategy),\n      _readableStrategy$hig = _readableStrategy['highWaterMark'],\n      readableHighWaterMark = _readableStrategy$hig === void 0 ? queueingStrategy === 'bytes' ? Math.pow(2, 14) : 1000 : _readableStrategy$hig;\n    var _writableStrategy = _objectSpread({}, writableStrategy),\n      _writableStrategy$hig = _writableStrategy['highWaterMark'],\n      writableHighWaterMark = _writableStrategy$hig === void 0 ? queueingStrategy === 'bytes' ? Math.pow(2, 14) : 1000 : _writableStrategy$hig;\n    this['readable'] = new ReadableStream((_ReadableStream = {}, _defineProperty(_ReadableStream, 'cancel', function cancel() {\n      _this._builder.clear();\n    }), _defineProperty(_ReadableStream, 'pull', function pull(c) {\n      _this._maybeFlush(_this._builder, _this._controller = c);\n    }), _defineProperty(_ReadableStream, 'start', function start(c) {\n      _this._maybeFlush(_this._builder, _this._controller = c);\n    }), _ReadableStream), {\n      'highWaterMark': readableHighWaterMark,\n      'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength\n    });\n    this['writable'] = new WritableStream((_WritableStream = {}, _defineProperty(_WritableStream, 'abort', function abort() {\n      _this._builder.clear();\n    }), _defineProperty(_WritableStream, 'write', function write() {\n      _this._maybeFlush(_this._builder, _this._controller);\n    }), _defineProperty(_WritableStream, 'close', function close() {\n      _this._maybeFlush(_this._builder.finish(), _this._controller);\n    }), _WritableStream), {\n      'highWaterMark': writableHighWaterMark,\n      'size': function size(value) {\n        return _this._writeValueAndReturnChunkSize(value);\n      }\n    });\n  }\n  _createClass(BuilderTransform, [{\n    key: \"_writeValueAndReturnChunkSize\",\n    value: function _writeValueAndReturnChunkSize(value) {\n      var bufferedSize = this._bufferedSize;\n      this._bufferedSize = this._getSize(this._builder.append(value));\n      return this._bufferedSize - bufferedSize;\n    }\n  }, {\n    key: \"_maybeFlush\",\n    value: function _maybeFlush(builder, controller) {\n      if (controller === null) {\n        return;\n      }\n      if (this._bufferedSize >= controller.desiredSize) {\n        ++this._numChunks && this._enqueue(controller, builder.toVector());\n      }\n      if (builder.finished) {\n        if (builder.length > 0 || this._numChunks === 0) {\n          ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (!this._finished && (this._finished = true)) {\n          this._enqueue(controller, null);\n        }\n      }\n    }\n  }, {\n    key: \"_enqueue\",\n    value: function _enqueue(controller, chunk) {\n      this._bufferedSize = 0;\n      this._controller = null;\n      chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n  }]);\n  return BuilderTransform;\n}();\n/** @ignore */\nvar chunkLength = function chunkLength(chunk) {\n  return chunk.length;\n};\n/** @ignore */\nvar chunkByteLength = function chunkByteLength(chunk) {\n  return chunk.byteLength;\n};","map":{"version":3,"sources":["io/whatwg/builder.ts"],"names":[],"mappings":"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","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { Vector } from '../../vector';\nimport { VectorType as V } from '../../interfaces';\nimport { Builder, BuilderOptions } from '../../builder/index';\n\n/** @ignore */\nexport interface BuilderTransformOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    readableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    writableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport function builderThroughDOMStream<T extends DataType = any, TNull = any>(options: BuilderTransformOptions<T, TNull>) {\n    return new BuilderTransform(options);\n}\n\n/** @ignore */\nexport class BuilderTransform<T extends DataType = any, TNull = any> {\n\n    public readable: ReadableStream<V<T>>;\n    public writable: WritableStream<T['TValue'] | TNull>;\n    public _controller: ReadableStreamDefaultController<V<T>> | null;\n\n    private _numChunks = 0;\n    private _finished = false;\n    private _bufferedSize = 0;\n    private _builder: Builder<T, TNull>;\n    private _getSize: (builder: Builder<T, TNull>) => number;\n\n    constructor(options: BuilderTransformOptions<T, TNull>) {\n\n        // Access properties by string indexers to defeat closure compiler\n\n        const {\n            ['readableStrategy']: readableStrategy,\n            ['writableStrategy']: writableStrategy,\n            ['queueingStrategy']: queueingStrategy = 'count',\n            ...builderOptions\n        } = options;\n\n        this._controller = null;\n        this._builder = Builder.new<T, TNull>(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...readableStrategy };\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...writableStrategy };\n\n        this['readable'] = new ReadableStream<V<T>>({\n            ['cancel']: ()  => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value: T['TValue'] | TNull) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n\n    private _writeValueAndReturnChunkSize(value: T['TValue'] | TNull) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n\n    private _maybeFlush(builder: Builder<T, TNull>, controller: ReadableStreamDefaultController<V<T>> | null) {\n        if (controller === null) { return; }\n        if (this._bufferedSize >= controller.desiredSize!) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n\n    private _enqueue(controller: ReadableStreamDefaultController<V<T>>, chunk: V<T> | null) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n}\n\n/** @ignore */ const chunkLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.length;\n/** @ignore */ const chunkByteLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.byteLength;\n"]},"metadata":{},"sourceType":"module"}