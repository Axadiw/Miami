{"ast":null,"code":"import _toConsumableArray from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from '../schema';\nimport { DataBufferBuilder } from './buffer';\nimport { Builder } from '../builder';\nimport { Union } from '../type';\n/** @ignore */\nexport var UnionBuilder = /*#__PURE__*/function (_Builder) {\n  _inherits(UnionBuilder, _Builder);\n  var _super = _createSuper(UnionBuilder);\n  function UnionBuilder(options) {\n    var _this;\n    _classCallCheck(this, UnionBuilder);\n    _this = _super.call(this, options);\n    _this._typeIds = new DataBufferBuilder(new Int8Array(0), 1);\n    if (typeof options['valueToChildTypeId'] === 'function') {\n      _this._valueToChildTypeId = options['valueToChildTypeId'];\n    }\n    return _this;\n  }\n  _createClass(UnionBuilder, [{\n    key: \"typeIdToChildIndex\",\n    get: function get() {\n      return this.type.typeIdToChildIndex;\n    }\n  }, {\n    key: \"append\",\n    value: function append(value, childTypeId) {\n      return this.set(this.length, value, childTypeId);\n    }\n  }, {\n    key: \"set\",\n    value: function set(index, value, childTypeId) {\n      if (childTypeId === undefined) {\n        childTypeId = this._valueToChildTypeId(this, value, index);\n      }\n      if (this.setValid(index, this.isValid(value))) {\n        this.setValue(index, value, childTypeId);\n      }\n      return this;\n    }\n    // @ts-ignore\n  }, {\n    key: \"setValue\",\n    value: function setValue(index, value, childTypeId) {\n      this._typeIds.set(index, childTypeId);\n      _get(_getPrototypeOf(UnionBuilder.prototype), \"setValue\", this).call(this, index, value);\n    }\n    // @ts-ignore\n  }, {\n    key: \"addChild\",\n    value: function addChild(child) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\".concat(this.children.length);\n      var childTypeId = this.children.push(child);\n      var _this$type = this.type,\n        children = _this$type.children,\n        mode = _this$type.mode,\n        typeIds = _this$type.typeIds;\n      var fields = [].concat(_toConsumableArray(children), [new Field(name, child.type)]);\n      this.type = new Union(mode, [].concat(_toConsumableArray(typeIds), [childTypeId]), fields);\n      return childTypeId;\n    }\n    /** @ignore */\n    // @ts-ignore\n  }, {\n    key: \"_valueToChildTypeId\",\n    value: function _valueToChildTypeId(builder, value, offset) {\n      throw new Error(\"Cannot map UnionBuilder value to child typeId. Pass the `childTypeId` as the second argument to unionBuilder.append(), or supply a `valueToChildTypeId` function as part of the UnionBuilder constructor options.\");\n    }\n  }]);\n  return UnionBuilder;\n}(Builder);\n/** @ignore */\nexport var SparseUnionBuilder = /*#__PURE__*/function (_UnionBuilder) {\n  _inherits(SparseUnionBuilder, _UnionBuilder);\n  var _super2 = _createSuper(SparseUnionBuilder);\n  function SparseUnionBuilder() {\n    _classCallCheck(this, SparseUnionBuilder);\n    return _super2.apply(this, arguments);\n  }\n  return _createClass(SparseUnionBuilder);\n}(UnionBuilder);\n/** @ignore */\nexport var DenseUnionBuilder = /*#__PURE__*/function (_UnionBuilder2) {\n  _inherits(DenseUnionBuilder, _UnionBuilder2);\n  var _super3 = _createSuper(DenseUnionBuilder);\n  function DenseUnionBuilder(options) {\n    var _this2;\n    _classCallCheck(this, DenseUnionBuilder);\n    _this2 = _super3.call(this, options);\n    _this2._offsets = new DataBufferBuilder(new Int32Array(0));\n    return _this2;\n  }\n  /** @ignore */\n  _createClass(DenseUnionBuilder, [{\n    key: \"setValue\",\n    value: function setValue(index, value, childTypeId) {\n      var childIndex = this.type.typeIdToChildIndex[childTypeId];\n      this._offsets.set(index, this.getChildAt(childIndex).length);\n      return _get(_getPrototypeOf(DenseUnionBuilder.prototype), \"setValue\", this).call(this, index, value, childTypeId);\n    }\n  }]);\n  return DenseUnionBuilder;\n}(UnionBuilder);","map":{"version":3,"sources":["builder/union.ts"],"names":[],"mappings":"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","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\nimport { Union, SparseUnion, DenseUnion } from '../type';\n\nexport interface UnionBuilderOptions<T extends Union = any, TNull = any> extends BuilderOptions<T, TNull> {\n    valueToChildTypeId?: (builder: UnionBuilder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport abstract class UnionBuilder<T extends Union, TNull = any> extends Builder<T, TNull> {\n\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._typeIds = new DataBufferBuilder(new Int8Array(0), 1);\n        if (typeof options['valueToChildTypeId'] === 'function') {\n            this._valueToChildTypeId = options['valueToChildTypeId'];\n        }\n    }\n\n    public get typeIdToChildIndex() { return this.type.typeIdToChildIndex; }\n\n    public append(value: T['TValue'] | TNull, childTypeId?: number) {\n        return this.set(this.length, value, childTypeId);\n    }\n\n    public set(index: number, value: T['TValue'] | TNull, childTypeId?: number) {\n        if (childTypeId === undefined) {\n            childTypeId = this._valueToChildTypeId(this, value, index);\n        }\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value, childTypeId);\n        }\n        return this;\n    }\n\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        this._typeIds.set(index, childTypeId!);\n        super.setValue(index, value);\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.children.length}`) {\n        const childTypeId = this.children.push(child);\n        const { type: { children, mode, typeIds } } = this;\n        const fields = [...children, new Field(name, child.type)];\n        this.type = <T> new Union(mode, [...typeIds, childTypeId], fields);\n        return childTypeId;\n    }\n\n    /** @ignore */\n    // @ts-ignore\n    protected _valueToChildTypeId(builder: UnionBuilder<T, TNull>, value: any, offset: number): number {\n        throw new Error(`Cannot map UnionBuilder value to child typeId. \\\nPass the \\`childTypeId\\` as the second argument to unionBuilder.append(), \\\nor supply a \\`valueToChildTypeId\\` function as part of the UnionBuilder constructor options.`);\n    }\n}\n\n/** @ignore */\nexport class SparseUnionBuilder<T extends SparseUnion, TNull = any> extends UnionBuilder<T, TNull> {}\n/** @ignore */\nexport class DenseUnionBuilder<T extends DenseUnion, TNull = any> extends UnionBuilder<T, TNull> {\n\n    protected _offsets: DataBufferBuilder<Int32Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._offsets = new DataBufferBuilder(new Int32Array(0));\n    }\n\n    /** @ignore */\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        const childIndex = this.type.typeIdToChildIndex[childTypeId!];\n        this._offsets.set(index, this.getChildAt(childIndex)!.length);\n        return super.setValue(index, value, childTypeId);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}