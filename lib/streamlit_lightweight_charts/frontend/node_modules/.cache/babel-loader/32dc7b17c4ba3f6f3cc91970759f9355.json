{"ast":null,"code":"import _classCallCheck from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n/* istanbul ignore file */\nimport { Visitor } from '../visitor';\nimport { TimeUnit } from '../enum';\n/** @ignore */\nvar sum = function sum(x, y) {\n  return x + y;\n};\n/** @ignore */\nvar variableWidthColumnErrorMessage = function variableWidthColumnErrorMessage(type) {\n  return \"Cannot compute the byte width of variable-width column \".concat(type);\n};\n/** @ignore */\nexport var ByteWidthVisitor = /*#__PURE__*/function (_Visitor) {\n  _inherits(ByteWidthVisitor, _Visitor);\n  var _super = _createSuper(ByteWidthVisitor);\n  function ByteWidthVisitor() {\n    _classCallCheck(this, ByteWidthVisitor);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ByteWidthVisitor, [{\n    key: \"visitNull\",\n    value: function visitNull(____) {\n      return 0;\n    }\n  }, {\n    key: \"visitInt\",\n    value: function visitInt(type) {\n      return type.bitWidth / 8;\n    }\n  }, {\n    key: \"visitFloat\",\n    value: function visitFloat(type) {\n      return type.ArrayType.BYTES_PER_ELEMENT;\n    }\n  }, {\n    key: \"visitBinary\",\n    value: function visitBinary(type) {\n      throw new Error(variableWidthColumnErrorMessage(type));\n    }\n  }, {\n    key: \"visitUtf8\",\n    value: function visitUtf8(type) {\n      throw new Error(variableWidthColumnErrorMessage(type));\n    }\n  }, {\n    key: \"visitBool\",\n    value: function visitBool(____) {\n      return 1 / 8;\n    }\n  }, {\n    key: \"visitDecimal\",\n    value: function visitDecimal(____) {\n      return 16;\n    }\n  }, {\n    key: \"visitDate\",\n    value: function visitDate(type) {\n      return (type.unit + 1) * 4;\n    }\n  }, {\n    key: \"visitTime\",\n    value: function visitTime(type) {\n      return type.bitWidth / 8;\n    }\n  }, {\n    key: \"visitTimestamp\",\n    value: function visitTimestamp(type) {\n      return type.unit === TimeUnit.SECOND ? 4 : 8;\n    }\n  }, {\n    key: \"visitInterval\",\n    value: function visitInterval(type) {\n      return (type.unit + 1) * 4;\n    }\n  }, {\n    key: \"visitList\",\n    value: function visitList(type) {\n      throw new Error(variableWidthColumnErrorMessage(type));\n    }\n  }, {\n    key: \"visitStruct\",\n    value: function visitStruct(type) {\n      return this.visitFields(type.children).reduce(sum, 0);\n    }\n  }, {\n    key: \"visitUnion\",\n    value: function visitUnion(type) {\n      return this.visitFields(type.children).reduce(sum, 0);\n    }\n  }, {\n    key: \"visitFixedSizeBinary\",\n    value: function visitFixedSizeBinary(type) {\n      return type.byteWidth;\n    }\n  }, {\n    key: \"visitFixedSizeList\",\n    value: function visitFixedSizeList(type) {\n      return type.listSize * this.visitFields(type.children).reduce(sum, 0);\n    }\n  }, {\n    key: \"visitMap\",\n    value: function visitMap(type) {\n      return this.visitFields(type.children).reduce(sum, 0);\n    }\n  }, {\n    key: \"visitDictionary\",\n    value: function visitDictionary(type) {\n      return this.visit(type.indices);\n    }\n  }, {\n    key: \"visitFields\",\n    value: function visitFields(fields) {\n      var _this = this;\n      return (fields || []).map(function (field) {\n        return _this.visit(field.type);\n      });\n    }\n  }, {\n    key: \"visitSchema\",\n    value: function visitSchema(schema) {\n      return this.visitFields(schema.fields).reduce(sum, 0);\n    }\n  }]);\n  return ByteWidthVisitor;\n}(Visitor);\n/** @ignore */\nexport var instance = new ByteWidthVisitor();","map":{"version":3,"sources":["visitor/bytewidth.ts"],"names":[],"mappings":"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","sourcesContent":["/* istanbul ignore file */\n\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Type, TimeUnit } from '../enum';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n} from '../type';\n\n/** @ignore */ const sum = (x: number, y: number) => x + y;\n/** @ignore */ const variableWidthColumnErrorMessage = (type: DataType) => `Cannot compute the byte width of variable-width column ${type}`;\n\n/** @ignore */\nexport interface ByteWidthVisitor extends Visitor {\n    visit<T extends DataType>(node: T): number;\n    visitMany<T extends DataType>(nodes: T[]): number[];\n    getVisitFn<T extends Type>    (node: T): (type: DataType<T>) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (type: T) => number;\n}\n\n/** @ignore */\nexport class ByteWidthVisitor extends Visitor {\n    public visitNull            (____: Null            ) { return 0; }\n    public visitInt             (type: Int             ) { return type.bitWidth / 8; }\n    public visitFloat           (type: Float           ) { return type.ArrayType.BYTES_PER_ELEMENT; }\n    public visitBinary          (type: Binary          ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitUtf8            (type: Utf8            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitBool            (____: Bool            ) { return 1 / 8; }\n    public visitDecimal         (____: Decimal         ) { return 16; }\n    public visitDate            (type: Date_           ) { return (type.unit + 1) * 4; }\n    public visitTime            (type: Time            ) { return type.bitWidth / 8; }\n    public visitTimestamp       (type: Timestamp       ) { return type.unit === TimeUnit.SECOND ? 4 : 8; }\n    public visitInterval        (type: Interval        ) { return (type.unit + 1) * 4; }\n    public visitList            (type: List            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitStruct          (type: Struct          ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitUnion           (type: Union           ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitFixedSizeBinary (type: FixedSizeBinary ) { return type.byteWidth; }\n    public visitFixedSizeList   (type: FixedSizeList   ) { return type.listSize * this.visitFields(type.children).reduce(sum, 0); }\n    public visitMap             (type: Map_            ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitDictionary      (type: Dictionary      ) { return this.visit(type.indices); }\n    public visitFields          (fields: Field[]       ) { return (fields || []).map((field) => this.visit(field.type)); }\n    public visitSchema          (schema: Schema        ) { return this.visitFields(schema.fields).reduce(sum, 0); }\n}\n\n/** @ignore */\nexport const instance = new ByteWidthVisitor();\n"]},"metadata":{},"sourceType":"module"}