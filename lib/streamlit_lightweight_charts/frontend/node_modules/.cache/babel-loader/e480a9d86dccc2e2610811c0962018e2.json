{"ast":null,"code":"import _get from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport var IntBuilder = /*#__PURE__*/function (_FixedWidthBuilder) {\n  _inherits(IntBuilder, _FixedWidthBuilder);\n  var _super = _createSuper(IntBuilder);\n  function IntBuilder() {\n    _classCallCheck(this, IntBuilder);\n    return _super.apply(this, arguments);\n  }\n  _createClass(IntBuilder, [{\n    key: \"setValue\",\n    value: function setValue(index, value) {\n      this._values.set(index, value);\n    }\n  }]);\n  return IntBuilder;\n}(FixedWidthBuilder);\n/** @ignore */\nexport var Int8Builder = /*#__PURE__*/function (_IntBuilder) {\n  _inherits(Int8Builder, _IntBuilder);\n  var _super2 = _createSuper(Int8Builder);\n  function Int8Builder() {\n    _classCallCheck(this, Int8Builder);\n    return _super2.apply(this, arguments);\n  }\n  return _createClass(Int8Builder);\n}(IntBuilder);\n/** @ignore */\nexport var Int16Builder = /*#__PURE__*/function (_IntBuilder2) {\n  _inherits(Int16Builder, _IntBuilder2);\n  var _super3 = _createSuper(Int16Builder);\n  function Int16Builder() {\n    _classCallCheck(this, Int16Builder);\n    return _super3.apply(this, arguments);\n  }\n  return _createClass(Int16Builder);\n}(IntBuilder);\n/** @ignore */\nexport var Int32Builder = /*#__PURE__*/function (_IntBuilder3) {\n  _inherits(Int32Builder, _IntBuilder3);\n  var _super4 = _createSuper(Int32Builder);\n  function Int32Builder() {\n    _classCallCheck(this, Int32Builder);\n    return _super4.apply(this, arguments);\n  }\n  return _createClass(Int32Builder);\n}(IntBuilder);\n/** @ignore */\nexport var Int64Builder = /*#__PURE__*/function (_IntBuilder4) {\n  _inherits(Int64Builder, _IntBuilder4);\n  var _super5 = _createSuper(Int64Builder);\n  function Int64Builder(options) {\n    var _this;\n    _classCallCheck(this, Int64Builder);\n    if (options['nullValues']) {\n      options['nullValues'] = options['nullValues'].map(toBigInt);\n    }\n    _this = _super5.call(this, options);\n    _this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    return _this;\n  }\n  _createClass(Int64Builder, [{\n    key: \"values64\",\n    get: function get() {\n      return this._values.buffer64;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return _get(_getPrototypeOf(Int64Builder.prototype), \"isValid\", this).call(this, toBigInt(value));\n    }\n  }]);\n  return Int64Builder;\n}(IntBuilder);\n/** @ignore */\nexport var Uint8Builder = /*#__PURE__*/function (_IntBuilder5) {\n  _inherits(Uint8Builder, _IntBuilder5);\n  var _super6 = _createSuper(Uint8Builder);\n  function Uint8Builder() {\n    _classCallCheck(this, Uint8Builder);\n    return _super6.apply(this, arguments);\n  }\n  return _createClass(Uint8Builder);\n}(IntBuilder);\n/** @ignore */\nexport var Uint16Builder = /*#__PURE__*/function (_IntBuilder6) {\n  _inherits(Uint16Builder, _IntBuilder6);\n  var _super7 = _createSuper(Uint16Builder);\n  function Uint16Builder() {\n    _classCallCheck(this, Uint16Builder);\n    return _super7.apply(this, arguments);\n  }\n  return _createClass(Uint16Builder);\n}(IntBuilder);\n/** @ignore */\nexport var Uint32Builder = /*#__PURE__*/function (_IntBuilder7) {\n  _inherits(Uint32Builder, _IntBuilder7);\n  var _super8 = _createSuper(Uint32Builder);\n  function Uint32Builder() {\n    _classCallCheck(this, Uint32Builder);\n    return _super8.apply(this, arguments);\n  }\n  return _createClass(Uint32Builder);\n}(IntBuilder);\n/** @ignore */\nexport var Uint64Builder = /*#__PURE__*/function (_IntBuilder8) {\n  _inherits(Uint64Builder, _IntBuilder8);\n  var _super9 = _createSuper(Uint64Builder);\n  function Uint64Builder(options) {\n    var _this2;\n    _classCallCheck(this, Uint64Builder);\n    if (options['nullValues']) {\n      options['nullValues'] = options['nullValues'].map(toBigInt);\n    }\n    _this2 = _super9.call(this, options);\n    _this2._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    return _this2;\n  }\n  _createClass(Uint64Builder, [{\n    key: \"values64\",\n    get: function get() {\n      return this._values.buffer64;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return _get(_getPrototypeOf(Uint64Builder.prototype), \"isValid\", this).call(this, toBigInt(value));\n    }\n  }]);\n  return Uint64Builder;\n}(IntBuilder);\nvar toBigInt = function (memo) {\n  return function (value) {\n    if (ArrayBuffer.isView(value)) {\n      memo.buffer = value.buffer;\n      memo.byteOffset = value.byteOffset;\n      memo.byteLength = value.byteLength;\n      value = bignumToBigInt(memo);\n      memo.buffer = null;\n    }\n    return value;\n  };\n}({\n  'BigIntArray': BigInt64Array\n});","map":{"version":3,"sources":["builder/int.ts"],"names":[],"mappings":"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","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder, BuilderOptions } from '../builder';\nimport { Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64 } from '../type';\n\n/** @ignore */\nexport class IntBuilder<T extends Int = Int, TNull = any> extends FixedWidthBuilder<T, TNull> {\n    public setValue(index: number, value: T['TValue']) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Int8Builder<TNull = any> extends IntBuilder<Int8, TNull> {}\n/** @ignore */\nexport class Int16Builder<TNull = any> extends IntBuilder<Int16, TNull> {}\n/** @ignore */\nexport class Int32Builder<TNull = any> extends IntBuilder<Int32, TNull> {}\n/** @ignore */\nexport class Int64Builder<TNull = any> extends IntBuilder<Int64, TNull> {\n    protected _values: WideBufferBuilder<Int32Array, BigInt64Array>;\n    constructor(options: BuilderOptions<Int64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Int32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\n/** @ignore */\nexport class Uint8Builder<TNull = any> extends IntBuilder<Uint8, TNull> {}\n/** @ignore */\nexport class Uint16Builder<TNull = any> extends IntBuilder<Uint16, TNull> {}\n/** @ignore */\nexport class Uint32Builder<TNull = any> extends IntBuilder<Uint32, TNull> {}\n/** @ignore */\nexport class Uint64Builder<TNull = any> extends IntBuilder<Uint64, TNull> {\n    protected _values: WideBufferBuilder<Uint32Array, BigUint64Array>;\n    constructor(options: BuilderOptions<Uint64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Uint32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\nconst toBigInt = ((memo: any) => (value: any) => {\n    if (ArrayBuffer.isView(value)) {\n        memo.buffer = value.buffer;\n        memo.byteOffset = value.byteOffset;\n        memo.byteLength = value.byteLength;\n        value = bignumToBigInt(memo);\n        memo.buffer = null;\n    }\n    return value;\n})({ 'BigIntArray': BigInt64Array });\n"]},"metadata":{},"sourceType":"module"}