{"ast":null,"code":"import _classCallCheck from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/michalmizera/Repos/StreamlitMiami/lib/streamlit_lightweight_charts/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { flatbuffers } from 'flatbuffers';\nvar Long = flatbuffers.Long;\nimport * as Schema_ from '../fb/Schema';\nimport { Visitor } from '../visitor';\nvar Null = Schema_.org.apache.arrow.flatbuf.Null;\nvar Int = Schema_.org.apache.arrow.flatbuf.Int;\nvar FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nvar Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nvar Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nvar Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nvar Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nvar Date = Schema_.org.apache.arrow.flatbuf.Date;\nvar Time = Schema_.org.apache.arrow.flatbuf.Time;\nvar Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nvar Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nvar List = Schema_.org.apache.arrow.flatbuf.List;\nvar Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nvar Union = Schema_.org.apache.arrow.flatbuf.Union;\nvar DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nvar FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nvar FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nvar Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n/** @ignore */\nexport var TypeAssembler = /*#__PURE__*/function (_Visitor) {\n  _inherits(TypeAssembler, _Visitor);\n  var _super = _createSuper(TypeAssembler);\n  function TypeAssembler() {\n    _classCallCheck(this, TypeAssembler);\n    return _super.apply(this, arguments);\n  }\n  _createClass(TypeAssembler, [{\n    key: \"visit\",\n    value: function visit(node, builder) {\n      return node == null || builder == null ? undefined : _get(_getPrototypeOf(TypeAssembler.prototype), \"visit\", this).call(this, node, builder);\n    }\n  }, {\n    key: \"visitNull\",\n    value: function visitNull(_node, b) {\n      Null.startNull(b);\n      return Null.endNull(b);\n    }\n  }, {\n    key: \"visitInt\",\n    value: function visitInt(node, b) {\n      Int.startInt(b);\n      Int.addBitWidth(b, node.bitWidth);\n      Int.addIsSigned(b, node.isSigned);\n      return Int.endInt(b);\n    }\n  }, {\n    key: \"visitFloat\",\n    value: function visitFloat(node, b) {\n      FloatingPoint.startFloatingPoint(b);\n      FloatingPoint.addPrecision(b, node.precision);\n      return FloatingPoint.endFloatingPoint(b);\n    }\n  }, {\n    key: \"visitBinary\",\n    value: function visitBinary(_node, b) {\n      Binary.startBinary(b);\n      return Binary.endBinary(b);\n    }\n  }, {\n    key: \"visitBool\",\n    value: function visitBool(_node, b) {\n      Bool.startBool(b);\n      return Bool.endBool(b);\n    }\n  }, {\n    key: \"visitUtf8\",\n    value: function visitUtf8(_node, b) {\n      Utf8.startUtf8(b);\n      return Utf8.endUtf8(b);\n    }\n  }, {\n    key: \"visitDecimal\",\n    value: function visitDecimal(node, b) {\n      Decimal.startDecimal(b);\n      Decimal.addScale(b, node.scale);\n      Decimal.addPrecision(b, node.precision);\n      return Decimal.endDecimal(b);\n    }\n  }, {\n    key: \"visitDate\",\n    value: function visitDate(node, b) {\n      Date.startDate(b);\n      Date.addUnit(b, node.unit);\n      return Date.endDate(b);\n    }\n  }, {\n    key: \"visitTime\",\n    value: function visitTime(node, b) {\n      Time.startTime(b);\n      Time.addUnit(b, node.unit);\n      Time.addBitWidth(b, node.bitWidth);\n      return Time.endTime(b);\n    }\n  }, {\n    key: \"visitTimestamp\",\n    value: function visitTimestamp(node, b) {\n      var timezone = node.timezone && b.createString(node.timezone) || undefined;\n      Timestamp.startTimestamp(b);\n      Timestamp.addUnit(b, node.unit);\n      if (timezone !== undefined) {\n        Timestamp.addTimezone(b, timezone);\n      }\n      return Timestamp.endTimestamp(b);\n    }\n  }, {\n    key: \"visitInterval\",\n    value: function visitInterval(node, b) {\n      Interval.startInterval(b);\n      Interval.addUnit(b, node.unit);\n      return Interval.endInterval(b);\n    }\n  }, {\n    key: \"visitList\",\n    value: function visitList(_node, b) {\n      List.startList(b);\n      return List.endList(b);\n    }\n  }, {\n    key: \"visitStruct\",\n    value: function visitStruct(_node, b) {\n      Struct.startStruct_(b);\n      return Struct.endStruct_(b);\n    }\n  }, {\n    key: \"visitUnion\",\n    value: function visitUnion(node, b) {\n      Union.startTypeIdsVector(b, node.typeIds.length);\n      var typeIds = Union.createTypeIdsVector(b, node.typeIds);\n      Union.startUnion(b);\n      Union.addMode(b, node.mode);\n      Union.addTypeIds(b, typeIds);\n      return Union.endUnion(b);\n    }\n  }, {\n    key: \"visitDictionary\",\n    value: function visitDictionary(node, b) {\n      var indexType = this.visit(node.indices, b);\n      DictionaryEncoding.startDictionaryEncoding(b);\n      DictionaryEncoding.addId(b, new Long(node.id, 0));\n      DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n      if (indexType !== undefined) {\n        DictionaryEncoding.addIndexType(b, indexType);\n      }\n      return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n  }, {\n    key: \"visitFixedSizeBinary\",\n    value: function visitFixedSizeBinary(node, b) {\n      FixedSizeBinary.startFixedSizeBinary(b);\n      FixedSizeBinary.addByteWidth(b, node.byteWidth);\n      return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n  }, {\n    key: \"visitFixedSizeList\",\n    value: function visitFixedSizeList(node, b) {\n      FixedSizeList.startFixedSizeList(b);\n      FixedSizeList.addListSize(b, node.listSize);\n      return FixedSizeList.endFixedSizeList(b);\n    }\n  }, {\n    key: \"visitMap\",\n    value: function visitMap(node, b) {\n      Map_.startMap(b);\n      Map_.addKeysSorted(b, node.keysSorted);\n      return Map_.endMap(b);\n    }\n  }]);\n  return TypeAssembler;\n}(Visitor);\n/** @ignore */\nexport var instance = new TypeAssembler();","map":{"version":3,"sources":["visitor/typeassembler.ts"],"names":[],"mappings":"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","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport * as Schema_ from '../fb/Schema';\n\nimport * as type from '../type';\nimport { Visitor } from '../visitor';\n\nimport Null = Schema_.org.apache.arrow.flatbuf.Null;\nimport Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nimport Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nimport Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nimport Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nimport Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nimport Date = Schema_.org.apache.arrow.flatbuf.Date;\nimport Time = Schema_.org.apache.arrow.flatbuf.Time;\nimport Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nimport Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nimport List = Schema_.org.apache.arrow.flatbuf.List;\nimport Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nimport Union = Schema_.org.apache.arrow.flatbuf.Union;\nimport DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nimport FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nimport FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nimport Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n\n/** @ignore */\nexport interface TypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T, builder: Builder): number | undefined;\n}\n\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T, builder: Builder): number | undefined {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    public visitNull<T extends type.Null>(_node: T, b: Builder) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    public visitInt<T extends type.Int>(node: T, b: Builder) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    public visitFloat<T extends type.Float>(node: T, b: Builder) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    public visitBinary<T extends type.Binary>(_node: T, b: Builder) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    public visitBool<T extends type.Bool>(_node: T, b: Builder) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    public visitUtf8<T extends type.Utf8>(_node: T, b: Builder) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    public visitDecimal<T extends type.Decimal>(node: T, b: Builder) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        return Decimal.endDecimal(b);\n    }\n    public visitDate<T extends type.Date_>(node: T, b: Builder) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    public visitTime<T extends type.Time>(node: T, b: Builder) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    public visitTimestamp<T extends type.Timestamp>(node: T, b: Builder) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    public visitInterval<T extends type.Interval>(node: T, b: Builder) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    public visitList<T extends type.List>(_node: T, b: Builder) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    public visitStruct<T extends type.Struct>(_node: T, b: Builder) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    public visitUnion<T extends type.Union>(node: T, b: Builder) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T, b: Builder) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>(node: T, b: Builder) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>(node: T, b: Builder) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    public visitMap<T extends type.Map_>(node: T, b: Builder) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n\n/** @ignore */\nexport const instance = new TypeAssembler();\n"]},"metadata":{},"sourceType":"module"}